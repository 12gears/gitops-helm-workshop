(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{271:function(e,t,r){"use strict";r.r(t);var n=r(38),s=Object(n.a)({},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"introduction"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#introduction","aria-hidden":"true"}},[e._v("#")]),e._v(" Introduction")]),e._v(" "),r("p",[e._v("This guide walks you through setting up a progressive delivery GitOps pipeline on a Kubernetes cluster.")]),e._v(" "),r("h2",{attrs:{id:"what-is-gitops"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#what-is-gitops","aria-hidden":"true"}},[e._v("#")]),e._v(" What is GitOps?")]),e._v(" "),r("p",[e._v("GitOps is a way to do Continuous Delivery, it works by using Git as a source of truth for\ndeclarative infrastructure and workloads. For Kubernetes this means using "),r("code",[e._v("git push")]),e._v(" instead\nof "),r("code",[e._v("kubectl create/apply")]),e._v(" or "),r("code",[e._v("helm install/upgrade")]),e._v(".")]),e._v(" "),r("p",[e._v("In order to apply the GitOps model to Kubernetes you need three things:")]),e._v(" "),r("ul",[r("li",[e._v("a Git repository with your workloads definitions in YAML format,\nHelm charts and any other Kubernetes custom resource that defines your cluster desired state")]),e._v(" "),r("li",[e._v("a container registry where your CI system pushes immutable images\n(no "),r("em",[e._v("latest")]),e._v(" tags, use "),r("em",[e._v("semantic versioning")]),e._v(" or git "),r("em",[e._v("commit sha")]),e._v(")")]),e._v(" "),r("li",[e._v("a Kubernetes controller that does a two-way synchronization:\n"),r("ul",[r("li",[e._v("watches for changes in the config repository and applies them to your cluster")]),e._v(" "),r("li",[e._v("watches the container registry for new images and  updates the workload\ndefinitions based on deployment policies")])])])]),e._v(" "),r("p",[e._v("In this workshop you'll be using\nGitHub to host the config repo,\nDocker Hub as the container registry,\n"),r("a",{attrs:{href:"https://github.com/fluxcd/flux",target:"_blank",rel:"noopener noreferrer"}},[e._v("Flux"),r("OutboundLink")],1),e._v(" as the GitOps controller and\n"),r("a",{attrs:{href:"https://github.com/fluxcd/helm-operator",target:"_blank",rel:"noopener noreferrer"}},[e._v("Helm Operator"),r("OutboundLink")],1),e._v(" for app lifecycle management.")]),e._v(" "),r("h2",{attrs:{id:"what-is-progressive-delivery"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#what-is-progressive-delivery","aria-hidden":"true"}},[e._v("#")]),e._v(" What is Progressive Delivery?")]),e._v(" "),r("p",[e._v("Progressive delivery is an umbrella term for advanced deployment patterns like canaries, feature flags and A/B testing.\nProgressive delivery techniques are used to reduce the risk of introducing a new software version in production\nby giving app developers and SRE teams a fine-grained control over the blast radius.")]),e._v(" "),r("p",[e._v("In this workshop you'll be using\n"),r("a",{attrs:{href:"https://github.com/weaveworks/flagger",target:"_blank",rel:"noopener noreferrer"}},[e._v("Flagger"),r("OutboundLink")],1),e._v(",\n"),r("a",{attrs:{href:"https://github.com/linkerd/linkerd2",target:"_blank",rel:"noopener noreferrer"}},[e._v("Linkerd"),r("OutboundLink")],1),e._v(" and\n"),r("a",{attrs:{href:"https://github.com/prometheus",target:"_blank",rel:"noopener noreferrer"}},[e._v("Prometheus"),r("OutboundLink")],1),e._v("\nto automate canary releases for Helm charts.")])])},[],!1,null,null,null);t.default=s.exports}}]);