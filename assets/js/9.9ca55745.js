(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{270:function(a,s,t){"use strict";t.r(s);var e=t(38),r=Object(e.a)({},function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"prerequisites"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#prerequisites","aria-hidden":"true"}},[a._v("#")]),a._v(" Prerequisites")]),a._v(" "),t("p",[a._v("In order to install the workshop prerequisites you'll need a Kubernetes cluster "),t("strong",[a._v("1.13")]),a._v("\nor newer with "),t("strong",[a._v("Load Balancer")]),a._v(" support.\nMake sure you have the following tools installed locally:")]),a._v(" "),t("ul",[t("li",[a._v("kubectl 1.14")]),a._v(" "),t("li",[a._v("helm 3.0")]),a._v(" "),t("li",[a._v("git 2.20")])]),a._v(" "),t("h2",{attrs:{id:"git"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git","aria-hidden":"true"}},[a._v("#")]),a._v(" Git")]),a._v(" "),t("p",[a._v("Fork the "),t("a",{attrs:{href:"https://github.com/stefanprodan/gitops-helm-workshop",target:"_blank",rel:"noopener noreferrer"}},[a._v("workshop"),t("OutboundLink")],1),a._v(" repository\nand clone it locally (replace the "),t("code",[a._v("GHUSER")]),a._v(" value with your GitHub username):")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("GHUSER")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("stefanprodan\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clone https://github.com/"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${GHUSER}")]),a._v("/gitops-helm-workshop\n")])])]),t("p",[a._v("Set your GitHub username and email:")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" gitops-helm-workshop\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config user.name "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${GHUSER}")]),a._v('"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config user.email "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"your@main.address"')]),a._v("\n")])])]),t("p",[a._v("Cluster state directory structure:")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("├── cluster\n    ├── canaries\n    ├── charts\n    │   └── podinfo\n    ├── namespaces\n    └── releases\n")])])]),t("h2",{attrs:{id:"flux"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#flux","aria-hidden":"true"}},[a._v("#")]),a._v(" Flux")]),a._v(" "),t("p",[a._v("Add FluxCD repository to Helm repos:")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("helm repo "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" fluxcd https://charts.fluxcd.io\n")])])]),t("p",[a._v("Install Flux by providing your GitHub repository URL:")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("helm upgrade -i flux fluxcd/flux --wait "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n--namespace fluxcd "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n--set git.url"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("git@github.com:"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${GHUSER}")]),a._v("/gitops-helm-workshop\n")])])]),t("p",[a._v("Install fluxctl:")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# macOS")]),a._v("\nbrew "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" fluxctl\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# linux")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" snap "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" fluxctl --edge\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# windows")]),a._v("\nhttps://github.com/fluxcd/flux/releases/download/1.13.3/fluxctl_windows_amd64\n")])])]),t("p",[a._v("Find the Git SSH public key:")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("FLUX_FORWARD_NAMESPACE")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("fluxcd\n\nfluxctl identity\n")])])]),t("p",[a._v("Copy the public key and create a deploy key with write access on your GitHub repository.\nGo to "),t("code",[a._v("Settings > Deploy keys")]),a._v(" click on "),t("code",[a._v("Add deploy key")]),a._v(", check "),t("code",[a._v("Allow write access")]),a._v(",\npaste the Flux public key and click "),t("code",[a._v("Add key")]),a._v(".")]),a._v(" "),t("h2",{attrs:{id:"helm-operator"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#helm-operator","aria-hidden":"true"}},[a._v("#")]),a._v(" Helm Operator")]),a._v(" "),t("p",[a._v("Install Flux Helm Operator in the "),t("code",[a._v("fluxcd")]),a._v(" namespace:")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("helm upgrade -i helm-operator fluxcd/helm-operator --wait "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n--namespace fluxcd "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n--set "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("createCRD")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("true "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n--set git.ssh.secretName"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("flux-git-deploy\n")])])]),t("h2",{attrs:{id:"linkerd"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#linkerd","aria-hidden":"true"}},[a._v("#")]),a._v(" Linkerd")]),a._v(" "),t("p",[a._v("Download the Linkerd v2 CLI:")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" -sL https://run.linkerd.io/install "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sh")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("PATH")])]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$PATH")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$HOME")]),a._v("/.linkerd2/bin\n")])])]),t("p",[a._v("Install the Linkerd control plane in the "),t("code",[a._v("linkerd")]),a._v(" namespace:")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("linkerd "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" kubectl apply -f -\n")])])]),t("p",[a._v("Validate the install with:")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("linkerd check\n")])])]),t("h2",{attrs:{id:"flagger"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#flagger","aria-hidden":"true"}},[a._v("#")]),a._v(" Flagger")]),a._v(" "),t("p",[a._v("Add Flagger Helm repository:")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("helm repo "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" flagger https://flagger.app\n")])])]),t("p",[a._v("Install Flagger in the "),t("code",[a._v("linkerd")]),a._v(" namespace:")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v("helm upgrade -i flagger flagger/flagger --wait "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n--namespace linkerd "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n--set crd.create"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("true "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n--set "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("metricsServer")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("http://linkerd-prometheus:9090 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n--set "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("meshProvider")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("linkerd\n")])])])])},[],!1,null,null,null);s.default=r.exports}}]);