(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{270:function(t,s,a){"use strict";a.r(s);var e=a(38),n=Object(e.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"helm-releases"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#helm-releases","aria-hidden":"true"}},[t._v("#")]),t._v(" Helm Releases")]),t._v(" "),a("p",[t._v("A chart release is described through a Kubernetes custom resource named "),a("strong",[t._v("HelmRelease")]),t._v(".")]),t._v(" "),a("p",[t._v("A Helm release can refer a chart from:")]),t._v(" "),a("ul",[a("li",[t._v("public or private Helm repositories over HTTPS")]),t._v(" "),a("li",[t._v("public or private Git repositories over SSH")])]),t._v(" "),a("h2",{attrs:{id:"install-nginx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install-nginx","aria-hidden":"true"}},[t._v("#")]),t._v(" Install NGINX")]),t._v(" "),a("p",[t._v("To expose applications outside of the cluster you'll be using the NGINX ingress controller.\nThe controller will run inside the Linkerd mesh.")]),t._v(" "),a("p",[t._v("Create a namespace with linkerd injection enabled:")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Namespace\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("annotations")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("fluxcd.io/ignore")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"false"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("linkerd.io/inject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" enabled\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ingress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("nginx\n")])])]),a("p",[t._v("Create a Helm release to install the NGINX ingress controller:")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" helm.fluxcd.io/v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" HelmRelease\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("ingress\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ingress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("nginx\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("annotations")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("fluxcd.io/ignore")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"false"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("releaseName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("ingress\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("chart")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("repository")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" https"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//kubernetes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("charts.storage.googleapis.com/\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("ingress\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1.19.0\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("values")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("controller")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("service")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" LoadBalancer\n")])])]),a("p",[t._v("Apply changes:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -A "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"install ingress"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin master "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\nfluxctl "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sync")]),t._v("\n")])])]),a("p",[t._v("Validate that the Helm operator has installed the release:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("kubectl -n ingress-nginx get hr\n")])])]),a("p",[t._v("Find the public IP of the ingress controller:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("kubectl -n ingress-nginx get svc\n")])])]),a("h2",{attrs:{id:"install-podinfo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install-podinfo","aria-hidden":"true"}},[t._v("#")]),t._v(" Install podinfo")]),t._v(" "),a("p",[a("a",{attrs:{href:"http://github.com/stefanprodan/podinfo",target:"_blank",rel:"noopener noreferrer"}},[t._v("Podinfo"),a("OutboundLink")],1),t._v(" is tiny Go web application.\nYou'll be installing podinfo using a Helm chart stored in the git repository at "),a("code",[t._v("cluster/charts/podinfo")]),t._v(".")]),t._v(" "),a("p",[t._v("Create the "),a("code",[t._v("prod")]),t._v(" namespace with linkerd injection enabled:")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Namespace\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("annotations")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("fluxcd.io/ignore")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"false"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("linkerd.io/inject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" enabled\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" prod\n")])])]),a("p",[t._v("Create a Helm release to install the podinfo chart\n(replace "),a("code",[t._v("GHUSER")]),t._v(" with your GitHub username and "),a("code",[t._v("LB-PUBLIC-IP")]),t._v(" with your ingress IP):")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br")]),a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" helm.fluxcd.io/v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" HelmRelease\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" podinfo\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" prod\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("annotations")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("fluxcd.io/ignore")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"false"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("releaseName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" podinfo\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("chart")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("git")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" git@github.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("GHUSER/gitops"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("helm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("workshop\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ref")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" master\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" cluster/charts/podinfo\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("values")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("repository")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" stefanprodan/podinfo\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tag")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 3.0.0\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("service")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("enabled")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ClusterIP\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ingress")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("enabled")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("annotations")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kubernetes.io/ingress.class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nginx"')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nginx.ingress.kubernetes.io/configuration-snippet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v("\n          proxy_set_header l5d-dst-override $service_name.$namespace.svc.cluster.local:9898;\n          proxy_hide_header l5d-remote-ip;\n          proxy_hide_header l5d-server-id;")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hosts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" LB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("PUBLIC"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("IP.nip.io\n")])])]),a("p",[t._v("Note that if you are on EKS, the host should be set to the "),a("code",[t._v("elb.amazonaws.com")]),t._v(" address:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("kubectl -n ingress-nginx get svc "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" Ingress\n")])])]),a("p",[t._v("Apply changes:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -A "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"install podinfo"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin master "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\nfluxctl "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sync")]),t._v("\n")])])]),a("p",[t._v("Validate that the Helm operator has installed podinfo:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("kubectl -n prod get hr\n")])])]),a("p",[t._v("Open your browser and navigate to "),a("code",[t._v("http://LB-PUBLIC-IP.nip.io/")]),t._v(", you should see podinfo v3.0.0 UI.")]),t._v(" "),a("p",[a("img",{attrs:{src:"/podinfo-3.0.0.png",alt:"podinfo"}})]),t._v(" "),a("h2",{attrs:{id:"automated-upgrade"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#automated-upgrade","aria-hidden":"true"}},[t._v("#")]),t._v(" Automated upgrade")]),t._v(" "),a("p",[t._v("Flux can be used to automate container image updates in your cluster.\nYou can enable the automate image tag updates by annotating Helm release objects.\nYou can also control what tags should be considered for an\nupdate by using glob, regex or semantic version expressions.")]),t._v(" "),a("p",[t._v("Edit the podinfo Helm release and enable Flux automated image updates:")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br")]),a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" helm.fluxcd.io/v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" HelmRelease\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("annotations")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("fluxcd.io/automated")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"true"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("fluxcd.io/tag.chart-image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" semver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("~3.0\n")])])]),a("p",[t._v("Apply changes:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -A "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"automate podinfo"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin master "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\nfluxctl "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sync")]),t._v("\n")])])]),a("p",[t._v("Validate that the Helm operator has upgraded podinfo:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("kubectl -n prod get hr\n")])])]),a("p",[t._v("Pull the changes made by Flux locally:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull origin master\n")])])]),a("p",[t._v("Open your browser and navigate to "),a("code",[t._v("http://LB-PUBLIC-IP.nip.io/")]),t._v(", you should see podinfo v3.0.5 UI.")]),t._v(" "),a("p",[a("img",{attrs:{src:"/podinfo-3.0.5.png",alt:"podinfo"}})]),t._v(" "),a("h2",{attrs:{id:"sealed-secrets"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sealed-secrets","aria-hidden":"true"}},[t._v("#")]),t._v(" Sealed secrets")]),t._v(" "),a("p",[t._v("In order to store secrets safely in a public Git repo you can use the\n"),a("a",{attrs:{href:"https://github.com/bitnami-labs/sealed-secrets",target:"_blank",rel:"noopener noreferrer"}},[t._v("Sealed Secrets controller"),a("OutboundLink")],1),t._v("\nand encrypt your Kubernetes Secrets into "),a("strong",[t._v("SealedSecrets")]),t._v(".\nThe sealed secret can be decrypted only by the controller running in your cluster.")]),t._v(" "),a("p",[t._v("Create the Sealed Secrets Helm release:")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" helm.fluxcd.io/v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" HelmRelease\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" sealed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("secrets\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" fluxcd\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("annotations")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("fluxcd.io/ignore")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"false"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("releaseName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" sealed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("secrets\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("chart")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("repository")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" https"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//kubernetes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("charts.storage.googleapis.com/\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" sealed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("secrets\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1.4.0\n")])])]),a("p",[t._v("Apply changes:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -A "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"install sealed-secrets"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin master "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\nfluxctl "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sync")]),t._v("\n")])])]),a("p",[t._v("Install the kubeseal CLI:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" https://github.com/bitnami-labs/sealed-secrets/releases/download/v0.8.1/kubeseal-darwin-amd64\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -m "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("755")]),t._v(" kubeseal-darwin-amd64 /usr/local/bin/kubeseal\n")])])]),a("p",[t._v("At startup, the sealed-secrets controller generates a RSA key and logs the public key.\nUsing kubeseal you can save your public key as pub-cert.pem,\nthe public key can be safely stored in Git, and can be used to encrypt secrets\nwithout direct access to the Kubernetes cluster:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("kubeseal --fetch-cert "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--controller-namespace"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("fluxcd "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--controller-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("sealed-secrets "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" pub-cert.pem\n")])])]),a("p",[t._v("You can generate a Kubernetes secret locally with kubectl and encrypt it with kubeseal:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("kubectl -n prod create secret generic basic-auth "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--from-literal"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("user"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("admin "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--from-literal"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("password"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("admin "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--dry-run "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n-o json "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" basic-auth.json\n\nkubeseal --format"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("yaml --cert"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("pub-cert.pem "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" basic-auth.json "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" basic-auth.yaml\n")])])]),a("p",[t._v("This generates a custom resource of type SealedSecret that contains the encrypted credentials.")]),t._v(" "),a("p",[t._v("Flux will apply the sealed secret on your cluster and sealed-secrets controller will\nthen decrypt it into a Kubernetes secret.")]),t._v(" "),a("p",[t._v("To prepare for disaster recovery you should backup the Sealed Secrets controller private key with:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("kubectl get secret -n fluxcd sealed-secrets-key -o yaml "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--export "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" sealed-secrets-key.yaml\n")])])]),a("p",[t._v("To restore from backup after a disaster, replace the newly-created secret and restart the controller:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("kubectl replace secret -n fluxcd sealed-secrets-key -f sealed-secrets-key.yaml\nkubectl delete pod -n fluxcd -l "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("app")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("sealed-secrets\n")])])])])},[],!1,null,null,null);s.default=n.exports}}]);